generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "linux-musl", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AssetCategory {
  STOCK
  ETF
  CRYPTO
  GOLD
}

enum TransactionType {
  BUY
  SELL
}

model Transaction {
  id        Int             @id @default(autoincrement())
  symbol    String // e.g. "NVDA", "BTC"
  name      String? // Optional: "NVIDIA Corporation"
  category  AssetCategory
  type      TransactionType
  quantity  Float
  price     Float
  fee       Float?
  note      String?
  date      DateTime        @default(now())
  createdAt DateTime        @default(now())
  userId    String
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  transactions  Transaction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
